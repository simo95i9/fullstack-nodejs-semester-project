<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Simon's Wiki</title>

    <%- include('partials/common-head') %>

    <script type="module">
        document.addEventListener("DOMContentLoaded", resetFormSectionEventListeners)

        const inputTemplates = {
            "figure": () => {
                const id = randomId()

                return `
                    <div>
                        <input type="hidden" name="content[${id}][type]" value="figure">

                        <label for="content[${id}][alt]">Alt</label>
                        <input type="text" name="content[${id}][alt]" id="content[${id}][alt]">

                        <label for="content[${id}][title]">Title</label>
                        <input type="text" name="content[${id}][title]" id="content[${id}][title]">

                        <label for="content[${id}][src]">Src</label>
                        <input type="text" name="content[${id}][src]" id="content[${id}][src]">

                        <label for="content[${id}][class]">Class</label>
                        <input type="text" name="content[${id}][class]" id="content[${id}][class]">
                    </div>
                `
            },
            "pre-code": () => {
                const id = randomId()

                return `
                    <input type="hidden" name="content[${id}][type]" value="pre-code">

                    <label for="content[${id}][class]">Class</label>
                    <input type="text" name="content[${id}][class]" id="content[${id}][class]">

                    <label for="content[${id}][comment]">Comment</label>
                    <input type="text" name="content[${id}][comment]" id="content[${id}][comment]">

                    <label for="content[${id}][text]">Code</label>
                    <textarea name="content[${id}][text]" id="content[${id}][text]" cols="60" rows="10"></textarea>
                `
            },
            "p": () => {
                const id = randomId()

                return `
                    <input type="hidden" name="content[${id}][type]" value="p">

                    <label for="content[${id}][text]">Text</label>
                    <textarea name="content[${id}][text]" id="content[${id}][text]" rows="10"></textarea>
                `
            }
        }

        const buttonsTemplate = `
            <ul>
                <li><a href="#" data-type="figure">+ figure</a></li>
                <li><a href="#" data-type="pre-code">+ code</a></li>
                <li><a href="#" data-type="p">+ paragraph</a></li>
                <li><a href="#" data-close style="color: red">×︎ remove</a></li>
            </ul>
        `

        function randomId() {
            const alphabet = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz".split("")
            const letters = ["", "", "", "", "", ""]

            return letters.map(l => alphabet[Math.floor(alphabet.length * Math.random())]).join("")
        }

        function resetFormSectionEventListeners() {
            [...document.querySelectorAll("[data-type]").values()].forEach(s => {
                s.removeEventListener("click", addSectionBelow)
                s.addEventListener("click", addSectionBelow)
            });

            [...document.querySelectorAll("[data-close]").values()].forEach(s => {
                s.removeEventListener("click", removeSection)
                s.addEventListener("click", removeSection)
            })
        }

        function addSectionBelow(event) {
            const type = event.target.dataset["type"]

            const buttons = document.createElement("nav")
            buttons.innerHTML = buttonsTemplate

            const content = document.createElement("div")
            content.innerHTML = inputTemplates[type]()

            event.target.parentElement.parentElement.parentElement.insertAdjacentElement("afterend", buttons)
            event.target.parentElement.parentElement.parentElement.insertAdjacentElement("afterend", content)

            resetFormSectionEventListeners()
        }

        function removeSection(event) {
            const nav = event.target.parentElement.parentElement.parentElement
            const input = event.target.parentElement.parentElement.parentElement.previousElementSibling

            input.remove()
            nav.remove()
        }

    </script>
</head>
<body>
<main>
    <%- include('partials/header') %>
    <h1>Wiki Create</h1>
    <form action="create" method="post">
        <div>
            <label for="title">Title</label>
            <h1><input type="text" name="title" id="title"></h1>

            <label for="slug">Slug</label>
            <input type="text" name="slug" id="slug">

            <label for="author">Author</label>
            <input type="text" name="author" id="author">
        </div>

        <nav>
            <ul>
                <li><a href="#" data-type="figure">+ figure</a></li>
                <li><a href="#" data-type="pre-code">+ code</a></li>
                <li><a href="#" data-type="p">+ paragraph</a></li>
                <li><a href="#" data-close style="color: red">×︎ remove</a></li>
            </ul>
        </nav>

        <hr>

        <button type="submit">Submit</button>
    </form>
</main>
<%- include('partials/footer', {...footer}) %>
</body>
</html>